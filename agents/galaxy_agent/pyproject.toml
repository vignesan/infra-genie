[project]
name = "galaxy"
version = "0.1.0"
description = "Galaxy - Multi-Agent System for Code, DevOps, and Workflow Automation with LLM-powered orchestration"
authors = [
    {name = "Your Name", email = "your@email.com"},
]
dependencies = [
    "google-adk~=1.8.0",
    "python-dotenv>=1.0.0",
    "opentelemetry-exporter-gcp-trace~=1.9.0",
    "google-cloud-logging>=3.12.0",
    "google-cloud-aiplatform[evaluation]~=1.113.0",
    "fastapi~=0.115.8",
    "uvicorn~=0.34.0",
    "psycopg2-binary>=2.9.10",
    "google-generativeai>=0.8.5",
    "aiofiles>=23.0.0",
    "python-multipart>=0.0.6",
    "PyGithub>=2.1.0",
    "azure-devops~=7.1.0b4",
    "requests>=2.31.0",
    "GitPython>=3.1.40",
]

requires-python = ">=3.11,<3.13"


[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.23.8",
    "nest-asyncio>=1.6.0",
]

[project.optional-dependencies]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort
    "C",  # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP", # pyupgrade
    "RUF", # ruff specific rules
]
ignore = ["E501", "C901", "B006"] # ignore line too long, too complex

[tool.ruff.lint.isort]
known-first-party = ["app", "frontend"]

[tool.mypy]
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
check_untyped_defs = true
disallow_subclassing_any = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
follow_imports = "silent"
ignore_missing_imports = true
explicit_package_bases = true
disable_error_code = ["misc", "no-untyped-call", "no-any-return"]

exclude = [".venv"]

[tool.codespell]
ignore-words-list = "rouge"
skip = "./locust_env/*,uv.lock,.venv,./frontend,**/*.ipynb"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.pytest.ini_options]
pythonpath = "."
asyncio_default_fixture_loop_scope = "function"

[tool.hatch.build.targets.wheel]
packages = ["app","frontend"]
