# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  # Build and Push for infrastructure-genie
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REGISTRY_REPO_NAME/$_CONTAINER_NAME",
        "--build-arg",
        "COMMIT_SHA=$COMMIT_SHA",
        ".",
      ]
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REGISTRY_REPO_NAME/$_CONTAINER_NAME",
      ]

  # Build and Push for terraform-mcp-server
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REGISTRY_REPO_NAME/terraform-mcp-server",
        "-f",
        "mcp-servers/terraform/Dockerfile",
        "mcp-servers/terraform",
      ]
    env: ['DOCKER_BUILDKIT=1']
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REGISTRY_REPO_NAME/terraform-mcp-server",
      ]

  # Build and Push for azure-devops-mcp
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REGISTRY_REPO_NAME/azure-devops-mcp",
        "-f",
        "mcp-servers/azure-devops/Dockerfile",
        "mcp-servers/azure-devops",
      ]
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REGISTRY_REPO_NAME/azure-devops-mcp",
      ]


  # Deploy infrastructure-genie to Staging (Public)
  - name: "gcr.io/cloud-builders/gcloud"
    id: deploy-staging
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "infrastructure-genie"
      - "--image"
      - "$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REGISTRY_REPO_NAME/$_CONTAINER_NAME"
      - "--region"
      - "${_REGION}"
      - "--project"
      - "${_STAGING_PROJECT_ID}"
      - "--allow-unauthenticated"
      - "--set-secrets"
      - "GITHUB_PERSONAL_ACCESS_TOKEN=github-pat:latest"
      - "--memory=1Gi"


  # Deploy terraform-mcp-server to Staging (Public)
  - name: "gcr.io/cloud-builders/gcloud"
    id: deploy-staging-mcp
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "terraform-mcp-server"
      - "--image"
      - "$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REGISTRY_REPO_NAME/terraform-mcp-server"
      - "--region"
      - "${_REGION}"
      - "--project"
      - "${_STAGING_PROJECT_ID}"
      - "--set-env-vars"
      - "TRANSPORT_MODE=streamable-http,TRANSPORT_HOST=0.0.0.0"
      - "--allow-unauthenticated"

  # Deploy azure-devops-mcp to Staging (Public)
  - name: "gcr.io/cloud-builders/gcloud"
    id: deploy-staging-ado-mcp
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "azure-devops-mcp"
      - "--image"
      - "$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REGISTRY_REPO_NAME/azure-devops-mcp"
      - "--region"
      - "${_REGION}"
      - "--project"
      - "${_STAGING_PROJECT_ID}"
      - "--set-env-vars"
      - "ADO_ORG_URL=${_ADO_ORG_URL},ADO_PROJECT=${_ADO_PROJECT}"
      - "--set-secrets"
      - "ADO_PAT=ado-pat:latest"
      - "--allow-unauthenticated"


  # Fetch Staging Service URL
  - name: "gcr.io/cloud-builders/gcloud"
    id: fetch-staging-url
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        echo $(gcloud run services describe infrastructure-genie \
        --region ${_REGION} --project ${_STAGING_PROJECT_ID} --format='value(status.url)') > staging_url.txt

  # Fetch ID Token
  - name: "gcr.io/cloud-builders/gcloud"
    id: fetch-id-token
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        echo $(gcloud auth print-identity-token -q) > id_token.txt

  # Load Testing
  - name: "python:3.11-slim"
    id: load_test
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        export _ID_TOKEN=$(cat id_token.txt)
        export _STAGING_URL=$(cat staging_url.txt)
        pip install locust==2.31.1 --user
        locust -f tests/load_test/load_test.py \
        --headless \
        -H $$_STAGING_URL \
        -t 30s -u 10 -r 0.5 \
        --csv=tests/load_test/.results/results \
        --html=tests/load_test/.results/report.html
    env:
      - 'PATH=/usr/local/bin:/usr/bin:~/.local/bin'

  # Export Load Test Results to GCS
  - name: "gcr.io/cloud-builders/gcloud"
    id: export-results-to-gcs
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        export _TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        gsutil -m cp -r tests/load_test/.results gs://${_BUCKET_NAME_LOAD_TEST_RESULTS}/results-$${_TIMESTAMP}
        echo "________________________________________________________________________ _"
        echo "Load test results copied to gs://${_BUCKET_NAME_LOAD_TEST_RESULTS}/results-$${_TIMESTAMP}"
        echo "HTTP link: https://console.cloud.google.com/storage/browser/${_BUCKET_NAME_LOAD_TEST_RESULTS}/results-$${_TIMESTAMP}"
        echo "________________________________________________________________________ _"

  # Trigger Prod Deployment
  - name: "gcr.io/cloud-builders/gcloud"
    id: trigger-prod-deployment
    entrypoint: gcloud
    args:
      - "beta"
      - "builds"
      - "triggers"
      - "run"
      - "deploy-infrastructure-genie"
      - "--region"
      - "$LOCATION"
      - "--project"
      - "$PROJECT_ID"
      - "--sha"
      - $COMMIT_SHA

  - name: "gcr.io/cloud-builders/gcloud"
    id: echo-view-build-trigger-link
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        echo "________________________________________________________________________ _"
        echo "Production deployment triggered. View progress and / or approve on the Cloud Build Console:"
        echo "https://console.cloud.google.com/cloud-build/builds;region=$LOCATION"
        echo "________________________________________________________________________ _"

substitutions:
  _STAGING_PROJECT_ID: qwiklabs-gcp-03-ec92c6095411
  _REGION: europe-west4
  _ARTIFACT_REGISTRY_REPO_NAME: infrastructure-genie
  _CONTAINER_NAME: infrastructure-genie
  _ADO_ORG_URL: "https://dev.azure.com/vignesan-hex"
  _ADO_PROJECT: "https://dev.azure.com/vignesan-hex/adk-hackathon"
  _INFRASTRUCTURE_GENIE_URL: "https://infrastructure-genie-610548143990.europe-west4.run.app"

options:
  logging: CLOUD_LOGGING_ONLY